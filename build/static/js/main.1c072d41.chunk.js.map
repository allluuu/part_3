{"version":3,"sources":["components/Person.js","components/App.js","index.js"],"names":["Person","_ref","persons","deletePerson","react_default","a","createElement","name","number","onClick","baseUrl","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","personObject","state","newName","newNumber","map","part","includes","alert","setState","axios","post","then","response","status","console","log","concat","updatePersons","id","person","url","window","confirm","delete","handleInputChange","target","value","handleNumber","_this2","get","data","_this3","onSubmit","onChange","type","components_Person","key","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1c072d41.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({persons, deletePerson}) => {\r\n\r\n    return(\r\n        <tr>\r\n            <td>{persons.name}</td>\r\n                <td>{persons.number}</td>\r\n                <td>\r\n                    <button onClick={deletePerson}>\r\n                        poista\r\n                    </button>\r\n                </td>\r\n\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\nexport default Person","import React from 'react';\r\nimport Person from './Person'\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            persons: [\r\n                {\r\n                    name: '',\r\n                    number: '',\r\n                    id: ''\r\n                }\r\n            ],\r\n            newName: '',\r\n            newNumber: ''\r\n        }\r\n    }\r\n\r\n\r\n    // is used for updating persons list after adding and deleting users\r\n    updatePersons() {\r\n        axios\r\n            .get(baseUrl)\r\n            .then(response => {\r\n                this.setState({persons: response.data})\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePersons()\r\n    }\r\n\r\n    addPerson = (event) => {\r\n        //event.preventDefault()\r\n        //console.log('add person pressed')\r\n\r\n        //create new objects from user input\r\n        const personObject = {\r\n            name: this.state.newName,\r\n            number: this.state.newNumber\r\n        }\r\n\r\n        const person_list = () => this.state.persons.map(part => part.name)\r\n        const number_list = () => this.state.persons.map(part => part.number)\r\n        //console.log('user list before adding: ' + person_list())\r\n\r\n        //check if name is already in list\r\n        if (!(person_list().includes(personObject.name)) && (!(number_list().includes(personObject.number)))) {\r\n\r\n            //Used before db.json\r\n            /*const persons = this.state.persons.concat(personObject)\r\n            console.log('added: ' + JSON.stringify(personObject))*/\r\n\r\n            //update newName and newPerson to empty strings as in beginning\r\n            this.setState({\r\n                //persons: persons, //Used before db.json\r\n                newName: '',\r\n                newNumber: ''\r\n            })\r\n\r\n            //post user input into db\r\n            axios\r\n                .post(baseUrl, personObject)\r\n                .then(response =>{\r\n\r\n                    if (response.status === 201) {\r\n                        console.log(`Added ${personObject.name} and ${personObject.number}`)\r\n\r\n                        this.updatePersons()\r\n                    }\r\n                })\r\n\r\n        }\r\n        else{\r\n            alert('Is already on list')\r\n        }\r\n    }\r\n\r\n    deletePerson  = (id, person) => {\r\n        return () => {\r\n            const url = (`/api/persons/${id}`)\r\n            //confirm delete from user\r\n            const status = window.confirm(`Do you want to remove user ${person.name} with id ${id}`)\r\n\r\n            if (status){\r\n                //delete from db\r\n                axios\r\n                    .delete(url)\r\n                    .then(response => {\r\n                        if (response.status === 200){\r\n\r\n                            console.log(`status 200, person ${person.name} deleted`)\r\n\r\n                        }\r\n                        //update person list\r\n                        this.updatePersons()\r\n                    })\r\n\r\n            }\r\n            else {\r\n                console.log(`canceled  ${person.name} delete `)\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    //handle name input\r\n    handleInputChange = (event) => {\r\n        this.setState({ newName: event.target.value })\r\n    }\r\n\r\n    //handle number input\r\n    handleNumber = (event) => {\r\n        this.setState({newNumber: event.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //Used before Person component\r\n        //const person = () => this.state.persons.map(part => <p> {part.name} {part.number} </p>)\r\n\r\n        return (\r\n            <div>\r\n                <h2>Phone book</h2>\r\n                <form onSubmit={this.addPerson}>\r\n                    <div>\r\n                        Name:\r\n                        <input\r\n                            onChange={this.handleInputChange}\r\n                            value={this.state.newName}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Number:\r\n                        <input\r\n                            onChange={this.handleNumber}\r\n                            value={this.state.newNumber}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <h2>Numbers</h2>\r\n                <div>\r\n                    <table>\r\n                        <thead>\r\n                        {this.state.persons.map(part =>\r\n                                <Person\r\n                                    persons={part}\r\n                                    key={part.id}\r\n                                    deletePerson={this.deletePerson(part.id, part)}\r\n                                />)}\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}